{"version":3,"sources":["webpack:///./js/colors_palette.js","webpack:///./js/refs.js","webpack:///./index.js","webpack:///./js/plugin_color_switch.js"],"names":["colors","refs","startBtn","document","querySelector","stopBtn","body","colorSwitch","constructor","changeColor","this","intervalId","isActive","init","start","setInterval","colorIndex","randomIntegerFromInterval","length","console","log","stop","clearInterval","min","max","Math","floor","random","color","style","backgroundColor","addEventListener","bind"],"mappings":"mIAAO,MAAMA,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,WCNG,MAAMC,EAAO,CAChBC,SAAUC,SAASC,cAAc,+BACjCC,QAASF,SAASC,cAAc,8BAChCE,KAAMH,SAASC,cAAc,SCC3BG,EAAc,ICAb,MACHC,aAAY,YAAEC,IACVC,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EAChBF,KAAKD,YAAcA,EAEnBC,KAAKG,OAGTA,OACIH,KAAKD,YAAYT,EAAO,IAG5Bc,QACQJ,KAAKE,WAITF,KAAKE,UAAW,EAEhBF,KAAKC,WAAaI,YAAY,KAC1B,MAAMC,EAAaN,KAAKO,0BAA0B,EAAGjB,EAAOkB,QAC5DC,QAAQC,IACJ,yDACAJ,GAEJN,KAAKD,YAAYT,EAAOgB,KA5BtB,MAgCVK,OACIC,cAAcZ,KAAKC,YACnBD,KAAKE,UAAW,EAGpBK,0BAA0BM,EAAKC,GAC3B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,KDpCxB,CAChCd,YAGJ,SAAyBmB,GACrB3B,EAAKK,KAAKuB,MAAMC,gBAAkBF,KAGtC3B,EAAKC,SAAS6B,iBAAiB,QAASxB,EAAYO,MAAMkB,KAAKzB,IAC/DN,EAAKI,QAAQ0B,iBAAiB,QAASxB,EAAYc,KAAKW,KAAKzB,M","file":"main.215ddca16b93c25aadb9.js","sourcesContent":["export const colors = [\n    \"#FFFFFF\",\n    \"#2196F3\",\n    \"#4CAF50\",\n    \"#FF9800\",\n    \"#009688\",\n    \"#795548\",\n];\n","export const refs = {\n    startBtn: document.querySelector(\"button[data-action='start']\"),\n    stopBtn: document.querySelector(\"button[data-action='stop']\"),\n    body: document.querySelector(\"body\"),\n};\n","import \"./styles.css\";\nimport { ColorSwitch } from \"./js/plugin_color_switch\";\nimport { refs } from \"./js/refs\";\n\nconst colorSwitch = new ColorSwitch({\n    changeColor: updateClockface,\n});\n\nfunction updateClockface(color) {\n    refs.body.style.backgroundColor = color;\n}\n\nrefs.startBtn.addEventListener(\"click\", colorSwitch.start.bind(colorSwitch));\nrefs.stopBtn.addEventListener(\"click\", colorSwitch.stop.bind(colorSwitch));\n","import { colors } from \"./colors_palette\";\n\nconst DELAY = 1000;\n\nexport class ColorSwitch {\n    constructor({ changeColor }) {\n        this.intervalId = null;\n        this.isActive = false;\n        this.changeColor = changeColor;\n\n        this.init();\n    }\n\n    init() {\n        this.changeColor(colors[0]);\n    }\n\n    start() {\n        if (this.isActive) {\n            return;\n        }\n\n        this.isActive = true;\n\n        this.intervalId = setInterval(() => {\n            const colorIndex = this.randomIntegerFromInterval(1, colors.length);\n            console.log(\n                \"ColorSwitch ~ this.intervalId=setInterval ~ colorIndex\",\n                colorIndex\n            );\n            this.changeColor(colors[colorIndex]);\n        }, DELAY);\n    }\n\n    stop() {\n        clearInterval(this.intervalId);\n        this.isActive = false;\n    }\n\n    randomIntegerFromInterval(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n}\n"],"sourceRoot":""}